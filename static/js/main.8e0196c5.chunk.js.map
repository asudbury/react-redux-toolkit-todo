{"version":3,"sources":["themes/defaultTheme.js","components/Header.js","features/todos/AddTodo.js","features/todos/TodoList.js","features/todos/todosSlice.js","features/todos/Todos.js","pages/MainPage.js","App.js","stores/index.js","index.js"],"names":["defaultTheme","createMuiTheme","typography","button","textTransform","overrides","MuiButton","root","borderRadius","Header","AppBar","color","position","style","height","Toolbar","Typography","variant","align","AddTodo","props","input","setInput","handleAddTodo","padding","Grid","container","xs","md","item","paddingRight","TextField","placeholder","value","onChange","e","target","onKeyUp","keyCode","fullWidth","Button","startIcon","onClick","TodoList","todosList","handleCompleteTodo","handleDeleteTodo","List","map","todo","ListItem","divider","Checkbox","aria-label","disableRipple","checked","complete","id","ListItemText","primary","task","ListItemSecondaryAction","IconButton","defaultProps","nextTodoId","todosSlice","createSlice","name","initialState","reducers","addTodo","state","action","push","payload","deleteTodo","filter","el","completeTodo","commpleteTodo","find","t","actions","Todos","dispatch","useDispatch","useState","useSelector","length","MainPage","App","ThemeProvider","theme","CssBaseline","store","configureStore","reducer","todosReducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e0196c5.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: '2em'\n      }\n    }\n  }\n});\n\nexport default defaultTheme;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nfunction Header() {\n  return (\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\n      <Toolbar>\n        <Typography variant=\"h6\" align=\"center\">\n          React Redux Toolkit Todo App\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nfunction AddTodo(props) {\n  const { input, setInput, handleAddTodo } = props;\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      handleAddTodo();\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Grid container>\n        <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Todo here\"\n            value={input}\n            onChange={handleInputChange}\n            onKeyUp={handleKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button\n            fullWidth\n            color=\"primary\"\n            variant=\"outlined\"\n            startIcon={<AddCircleIcon />}\n            onClick={handleAddTodo}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nAddTodo.propTypes = {\n  input: string.isRequired,\n  setInput: func.isRequired,\n  handleAddTodo: func.isRequired\n};\n\nexport default AddTodo;\n","import React from 'react';\nimport { arrayOf, shape, number, string, bool, func } from 'prop-types';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Checkbox,\n  IconButton\n} from '@material-ui/core';\n\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\nfunction TodoList(props) {\n  const { todosList, handleCompleteTodo, handleDeleteTodo } = props;\n\n  return (\n    <List>\n      {todosList.map((todo) => (\n        <ListItem key={todo.id} button divider>\n          <Checkbox\n            aria-label=\"Complete Todo\"\n            disableRipple\n            checked={todo.complete}\n            onChange={() => handleCompleteTodo(todo.id)}\n          />\n          <ListItemText primary={todo.task} />\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete Todo\"\n              onClick={() => handleDeleteTodo(todo.id)}\n            >\n              <DeleteOutlined color=\"primary\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nTodoList.propTypes = {\n  todosList: arrayOf(\n    shape({\n      id: number.isRequired,\n      task: string.isRequired,\n      complete: bool.isRequired\n    })\n  ),\n  handleCompleteTodo: func.isRequired,\n  handleDeleteTodo: func.isRequired\n};\n\nTodoList.defaultProps = {\n  todosList: []\n};\n\nexport default TodoList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nlet nextTodoId = 0;\n\nexport const todosSlice = createSlice({\n  name: 'todos',\n  initialState: [\n    {\n      id: 998,\n      task: 'Convert to TypeScript',\n      complete: true\n    },\n    {\n      id: 999,\n      task: 'Read Twitter',\n      complete: false\n    }\n  ],\n  reducers: {\n    addTodo: (state, action) => {\n      nextTodoId += 1;\n      state.push({\n        id: nextTodoId,\n        task: action.payload,\n        complete: false\n      });\n    },\n\n    deleteTodo(state, action) {\n      return state.filter((el) => el.id !== action.payload);\n    },\n    completeTodo(state, action) {\n      const commpleteTodo = state.find((t) => t.id === action.payload);\n      commpleteTodo.complete = !commpleteTodo.complete;\n      return state;\n    }\n  }\n});\n\nexport const { addTodo, deleteTodo, completeTodo } = todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/Header';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport { addTodo, deleteTodo, completeTodo } from './todosSlice';\n\nfunction Todos() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n  const todosList = useSelector((state) => state);\n\n  const handleAddTodo = () => {\n    if (input.length > 0) {\n      dispatch(addTodo(input));\n      setInput('');\n    }\n  };\n\n  const handleCompleteTodo = (id) => {\n    dispatch(completeTodo(id));\n  };\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  return (\n    <div>\n      <Header />\n      <AddTodo\n        input={input}\n        setInput={setInput}\n        handleAddTodo={handleAddTodo}\n      />\n      <TodoList\n        todosList={todosList}\n        handleCompleteTodo={handleCompleteTodo}\n        handleDeleteTodo={handleDeleteTodo}\n      />\n    </div>\n  );\n}\n\nexport default Todos;\n","import { React } from 'react';\nimport Todos from '../features/todos/Todos';\n\nfunction MainPage() {\n  return <Todos />;\n}\n\nexport default MainPage;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport defaultTheme from './themes/defaultTheme';\nimport MainPage from './pages/MainPage';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CssBaseline />\n      <MainPage />;\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { logger } from 'redux-logger';\nimport { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todos/todosSlice';\n\nconst store = configureStore({\n  reducer: todosReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './stores';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}