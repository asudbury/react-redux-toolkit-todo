{"version":3,"sources":["themes/defaultTheme.js","constants/index.js","actions/AddTodoAction.js","actions/CompleteTodoAction.js","actions/DeleteTodoAction.js","components/Header.js","components/AddTodo.js","components/TodoList.js","pages/MainPage.js","App.js","reducers/index.js","stores/index.js","index.js"],"names":["defaultTheme","createMuiTheme","typography","button","textTransform","overrides","MuiButton","root","borderRadius","ADD_TODO","DELETE_TODO","COMPLETE_TODO","nextTodoId","addTodoAction","newTask","type","payload","id","task","complete","completeTodoAction","todoId","deleteTodoAction","Header","AppBar","color","position","style","height","Toolbar","Typography","variant","align","AddTodo","props","input","setInput","handleAddTodo","padding","Grid","container","xs","md","item","paddingRight","TextField","placeholder","value","onChange","e","target","onKeyUp","keyCode","fullWidth","Button","startIcon","onClick","TodoList","todos","handleCompleteTodo","handleDeleteTodo","List","map","todo","ListItem","divider","Checkbox","aria-label","disableRipple","checked","ListItemText","primary","ListItemSecondaryAction","IconButton","MainPage","dispatch","useDispatch","useState","useSelector","state","length","App","ThemeProvider","theme","CssBaseline","initialState","rootReducer","action","filter","el","commpleteTodo","find","t","store","createStore","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2526b65.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: '2em'\n      }\n    }\n  }\n});\n\nexport default defaultTheme;\n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\n","import { ADD_TODO } from '../constants';\n\nlet nextTodoId = 0;\n\nfunction addTodoAction(newTask) {\n  nextTodoId += 1;\n\n  return {\n    type: ADD_TODO,\n    payload: {\n      id: nextTodoId,\n      task: newTask,\n      complete: false\n    }\n  };\n}\n\nexport default addTodoAction;\n","import { COMPLETE_TODO } from '../constants';\n\nfunction completeTodoAction(todoId) {\n  return {\n    type: COMPLETE_TODO,\n    payload: {\n      id: todoId\n    }\n  };\n}\n\nexport default completeTodoAction;\n","import { DELETE_TODO } from '../constants';\n\nfunction deleteTodoAction(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id: todoId\n    }\n  };\n}\n\nexport default deleteTodoAction;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nfunction Header() {\n  return (\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\n      <Toolbar>\n        <Typography variant=\"h6\" align=\"center\">\n          React Redux Todo App\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nfunction AddTodo(props) {\n  const { input, setInput, handleAddTodo } = props;\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      handleAddTodo();\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Grid container>\n        <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Todo here\"\n            value={input}\n            onChange={handleInputChange}\n            onKeyUp={handleKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button\n            fullWidth\n            color=\"primary\"\n            variant=\"outlined\"\n            startIcon={<AddCircleIcon />}\n            onClick={handleAddTodo}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nAddTodo.propTypes = {\n  input: PropTypes.string.isRequired,\n  setInput: PropTypes.func.isRequired,\n  handleAddTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Checkbox,\n  IconButton\n} from '@material-ui/core';\n\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\nfunction TodoList(props) {\n  const { todos, handleCompleteTodo, handleDeleteTodo } = props;\n\n  return (\n    <List>\n      {todos.map((todo) => (\n        <ListItem key={todo.id} button divider>\n          <Checkbox\n            aria-label=\"Complete Todo\"\n            disableRipple\n            checked={todo.complete}\n            onChange={() => handleCompleteTodo(todo.id)}\n          />\n          <ListItemText primary={todo.task} />\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete Todo\"\n              onClick={() => handleDeleteTodo(todo.id)}\n            >\n              <DeleteOutlined color=\"primary\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.shape([]).isRequired,\n  handleCompleteTodo: PropTypes.func.isRequired,\n  handleDeleteTodo: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport addTodoAction from '../actions/AddTodoAction';\nimport completeTodoAction from '../actions/CompleteTodoAction';\nimport deleteTodoAction from '../actions/DeleteTodoAction';\nimport Header from '../components/Header';\nimport AddTodo from '../components/AddTodo';\nimport TodoList from '../components/TodoList';\n\nfunction MainPage() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n  const todos = useSelector((state) => state.todos);\n\n  const handleAddTodo = () => {\n    if (input.length > 0) {\n      dispatch(addTodoAction(input));\n      setInput('');\n    }\n  };\n\n  const handleCompleteTodo = (id) => {\n    dispatch(completeTodoAction(id));\n  };\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodoAction(id));\n  };\n\n  return (\n    <div>\n      <Header />\n      <AddTodo\n        input={input}\n        setInput={setInput}\n        handleAddTodo={handleAddTodo}\n      />\n      <TodoList\n        todos={todos}\n        handleCompleteTodo={handleCompleteTodo}\n        handleDeleteTodo={handleDeleteTodo}\n      />\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport defaultTheme from './themes/defaultTheme';\nimport MainPage from './pages/MainPage';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CssBaseline />\n      <MainPage />;\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, DELETE_TODO, COMPLETE_TODO } from '../constants';\n\n/// provide some test data\nconst initialState = {\n  todos: [\n    {\n      id: 't1',\n      task: 'Convert to TypeScript',\n      complete: true\n    },\n    {\n      id: 't2',\n      task: 'Read Twitter',\n      complete: false\n    }\n  ]\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return { ...state, todos: [...state.todos, action.payload] };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter((el) => el.id !== action.payload.id)\n      };\n\n    case COMPLETE_TODO: {\n      const commpleteTodo = state.todos.find((t) => t.id === action.payload.id);\n      commpleteTodo.complete = !commpleteTodo.complete;\n      return { ...state, todos: [...state.todos] };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { logger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './stores';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}